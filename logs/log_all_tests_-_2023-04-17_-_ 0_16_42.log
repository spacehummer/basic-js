
> basic-js@1.0.0 test
> mocha

---- Source data: ACTIVITY OVER 9000
---- Rounded data: NaN
---- Source data is in wrong type!
---- Source data: 1
---- Rounded data: 1
---- Calculated age: 22387
---- Source data: 5 , 4074
---- Turns info object: { turns: 31, seconds: 27 }


  Carbon dating
    variable presence
      ✔ function dateSample exists
    base requirements
      ✔ should return false on wrong type
      ✔ should return false if no argument
      ✔ should validate parameter
    functional requirements 
      ✔ should handle inadequate values
      passes simpliest check and determines correct tests
        ✔ basic examples
        ✔ should handle floating-point numbers

  Common character count
    - should return the number of common characters between the given strings

  Count cats!
    variable presence
      ✔ function countCats exists
    base requirements
      ✔ level 0.1
      ✔ level 0.2
      ✔ level 0.3
      ✔ level 0.4
      ✔ level 0.5
    functional requirements
      ✔ level 1
      ✔ level 2
      ✔ level 3

  Delete digit
    - should return the maximal number you can obtain by deleting exactly one digit of the given number

  DNS stats
    - should return domains stats

  Dream team
    variable presence
      ✔ function createDreamTeam exists
    base requirements
      ✔ should return sequence from pre-sorted array
      ✔ should return sorted sequence
      ✔ empty team shouldn't lead to error
    functional requirements 
      ✔ should handle whitespaces
      ✔ should handle lowercase
      ✔ should return false on wrong type
      ✔ should ignore non-string values
      ✔ should handle non-standard cases

  Encode line
    - should return encoding version of string

  Extended repeater
    variable presence
      ✔ function repeater exists
    base & functional requirements
      - repeats string properly
      - supports custom separator
      - supports basic addition
      - supports missing repeat counters
      - some pack of tests
    extended requirements 
      - supports multi words 
      - supports different registers & whitespaces & symbols
      - supports different str & addition
      - correctly converts str and addition options to string
      - correctly works with no separator & no additionSeparator

  File names
    - should return an array of names that will be given to the files

  Get email domain
    - should return domain name of the given email address

  Hanoi tower
    variable presence
      ✔ function calculateHanoi exists
    base requirements
      ✔ returns correct answer

  MAC address
    - should check if a given string corresponds to MAC-48 address or not

  Matrix elements sum
    - should return the sum of the matrix elements that are not below 0

  Minesweeper
    - should return minesweeper game setup

  Recursive depth
    variable presence
      ✔ function calculateDepth exists
    functional requirements
      - returns correct depth of flat arrays
      - returns correct depth of nested arrays
      - works recursively

  Make chain!
    variable presence
      ✔ object chainMaker exists
    base requirements
      - chaining works!
      - throws an Error with message "You can't remove incorrect link!" on trying to remove wrong link
    functional requirements
      - function returns correct values
      - removeLinks works correctly

  Sort by height
    - should return sorted array without moving -1

  Sum digits
    - should return the sum of digits

  Transform array
    variable presence
      ✔ function transform exists
    functional requirements
      - correctly works with an empty array
      - throws an Error with message "'arr' parameter must be an instance of the Array!" if arr is not an instance of the Array
      - doesn't affect simple arrays
      - basic sequence interactions work well
      - advanced sequence interactions work well
      - control sequences work properly
      - doesn't change initial array

  Vigenere cipher
    variables presence
      ✔ class VigenereCipheringMachine exists
      ✔ correct inheritance
      ✔ has methods
    base requirements
      - must throw an Error if no args
      - base encryption
      - base decryption
    functional requirements
      - double-sided direct cryptography
      - double-sided reverse cryptography 2

  What season
    variable presence
      ✔ function getSeason exists
    base requirements
      ✔ returns proper value
      ✔ returns proper value if date is before 1970
      ✔ returns proper value (month index)
      ✔ corretly handles argument absence
      ✔ some pack of tests
    extended requirements 
      ✔ throws an error with message "Invalid date!" on invalid argument
      ✔ throws an error with message "Invalid date!" on tricky moment
      ✔ throws an error with message "Invalid date!" on a very tricky moment


  43 passing (62ms)
  40 pending

